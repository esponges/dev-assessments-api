// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model QuestionMetadata {
  id            String   @id @default(uuid())
  question_type String
  topic         String // main technology such   as React, GraphQL, etc
  // we'd probably need subtopics like librarier, frameworks, etc
  difficulty    String
  question      Question?
}

model Question {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  metadataId String   @unique
  metadata   QuestionMetadata @relation(fields: [metadataId], references: [id])
  updatedAt DateTime @updatedAt
}

// future model for a Candidate - should be improved
// model Candidate {
//   id        String   @id @default(uuid())
//   name      String
//   email     String
//   }

model CandidateResume {
  id        String   @id @default(uuid())
  // name      String
  // email     String
  resume    String
  techStack String[]
  detailedTechStack Json @default("[{}]")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // add a relation to the candidate in the future
}

// type Assessment = {
//   title: string;
//   questions: {
//     question_text: string;
//     question_type: string;
//     question_topic: string;
//     choices?: string[];
//     correct_answer: string;
//   }[];
// };

model AssessmentQuestion {
  id            String   @id @default(uuid())
  questionText  String
  questionType  String
  // figure out how to correctly store the topic
  // questionTopic String
  // should choices be a json array with ids? probably a relation to a separate model
  choices       String[]
  correctAnswer String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  assessmentId  String
  assessment    Assessment @relation(fields: [assessmentId], references: [id])
  // todo: add relation to a candidate
}

model Assessment {
  id        String   @id @default(uuid())
  title     String
  questions AssessmentQuestion[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
